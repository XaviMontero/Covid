// Generated by https://quicktype.io

 
import 'package:covid/src/model/contry/currency.dart';
import 'package:covid/src/model/contry/language.dart';
import 'package:covid/src/model/contry/regional_bloc.dart';
import 'package:covid/src/model/contry/translations.dart';
import 'package:json_annotation/json_annotation.dart';
part 'contry.g.dart';

@JsonSerializable(explicitToJson: true)
class Contry {
  String name;
  List<String> topLevelDomain;
  String alpha2Code;
  String alpha3Code;
  List<String> callingCodes;
  String capital;
  List<String> altSpellings;
  String  region;
  String subregion;
  int population;
  List<double> latlng;
  String demonym;
  double area;
  double gini;
  List<String> timezones;
  List<String> borders;
  String nativeName;
  String numericCode;
  List<Currency> currencies;
  List<Language> languages;
  Translations translations;
  String flag;
  List<RegionalBloc> regionalBlocs;
  String cioc;

  Contry({
    this.name,
    this.topLevelDomain,
    this.alpha2Code,
    this.alpha3Code,
    this.callingCodes,
    this.capital,
    this.altSpellings,
    this.region,
    this.subregion,
    this.population,
    this.latlng,
    this.demonym,
    this.area,
    this.gini,
    this.timezones,
    this.borders,
    this.nativeName,
    this.numericCode,
    this.currencies,
    this.languages,
    this.translations,
    this.flag,
    this.regionalBlocs,
    this.cioc,
  });
  factory Contry.fromJson(Map<String, dynamic> json) => _$ContryFromJson(json);
  Map<String, dynamic> toJson() => _$ContryToJson(this);
}

class Contrys {
  List<Contry> items = new List();
  Contrys.fromJsonList(List<dynamic> jsonList) {
    if (jsonList == null) return;
    for (var item in jsonList) {
      final result = new Contry.fromJson(item);
      items.add(result);
    }
  }
}
